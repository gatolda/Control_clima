import RPi.GPIO as GPIO
import time

class RelayBoard:
    def __init__(self, relay_pins=None):
        """
        Inicializa la placa de rel√©s con advertencias activadas.
        :param relay_pins: Lista de pines f√≠sicos usados para los rel√©s.
        """
        if relay_pins is None:
            relay_pins = [12, 38]  # Pines f√≠sicos de tu hardware

        self.relay_pins = relay_pins
        GPIO.setwarnings(True)  # ‚ö†Ô∏è Mantenemos advertencias activas
        GPIO.setmode(GPIO.BOARD)  # Usamos numeraci√≥n f√≠sica de la placa

        # Limpia configuraci√≥n previa de pines (evita conflictos)
        print("‚ôªÔ∏è Liberando pines GPIO anteriores (si aplica)...")
        GPIO.cleanup()

        print("‚ö° Inicializando placa de rel√©s...")
        for pin in self.relay_pins:
            GPIO.setup(pin, GPIO.OUT, initial=GPIO.LOW)
            print(f"‚úÖ Pin f√≠sico {pin} configurado como salida y apagado por defecto.")

    def activar(self, canal):
        """
        Activa un rel√© espec√≠fico.
        :param canal: √çndice del canal (0 = primer rel√©).
        """
        if canal < 0 or canal >= len(self.relay_pins):
            print(f"‚ùå Canal {canal} fuera de rango")
            return
        GPIO.output(self.relay_pins[canal], GPIO.HIGH)
        print(f"‚ö° Rel√© {canal} activado (pin f√≠sico {self.relay_pins[canal]})")

    def desactivar(self, canal):
        """
        Desactiva un rel√© espec√≠fico.
        :param canal: √çndice del canal (0 = primer rel√©).
        """
        if canal < 0 or canal >= len(self.relay_pins):
            print(f"‚ùå Canal {canal} fuera de rango")
            return
        GPIO.output(self.relay_pins[canal], GPIO.LOW)
        print(f"üîå Rel√© {canal} desactivado (pin f√≠sico {self.relay_pins[canal]})")

    # Adaptadores con nombres en ingl√©s
    turn_on = activar
    turn_off = desactivar

    def apagar_todos(self):
        """Apaga todos los rel√©s."""
        print("üîå Apagando todos los rel√©s...")
        for pin in self.relay_pins:
            GPIO.output(pin, GPIO.LOW)
        print("‚úÖ Todos los rel√©s apagados.")

    def cleanup(self):
        """Limpia la configuraci√≥n de los pines GPIO."""
        print("‚ôªÔ∏è Liberando pines GPIO...")
        GPIO.cleanup()
