"""
main.py - Programa principal para el sistema de control clim√°tico
"""

import RPi.GPIO as GPIO
import time
from logica.modos import ModeManager, Modo
from logica.controlador import ControladorClima
from Actuadores.relay import RelayBoard
from Sensores.temp_humidity import TempHumiditySensor

# Limpia los pines GPIO antes de iniciar para evitar conflictos
print("‚ö° Limpiando configuraci√≥n previa de GPIO...")
GPIO.cleanup()

def seleccionar_modo_inicial():
    """Pregunta al usuario el modo de operaci√≥n al inicio"""
    print("==== Sistema de Control Clim√°tico ====")
    print("Selecciona el modo de operaci√≥n:")
    print("1 - Manual")
    print("2 - Autom√°tico")
    opcion = input("Ingresa el n√∫mero de opci√≥n: ")

    if opcion == "1":
        return Modo.MANUAL
    elif opcion == "2":
        return Modo.AUTOMATICO
    else:
        print("‚ö†Ô∏è Opci√≥n inv√°lida. Iniciando en modo Manual por defecto.")
        return Modo.MANUAL


def main():
    # Configurar el modo inicial
    modo_inicial = seleccionar_modo_inicial()
    mode_manager = ModeManager(modo_inicial)
    print(f"‚úÖ Modo actual: {mode_manager.obtener_modo().value}")

    # Inicializar sensores y actuadores
    try:
        sensor = TempHumiditySensor(pin=4)  # Ajusta el pin seg√∫n tu hardware
        print("üì° Sensor inicializado correctamente.")
        actuador = RelayBoard(relay_pins=[12, 38])  # Ajusta los pines a tu placa
        print("‚ö° Placa de rel√©s inicializada correctamente.")

        controlador = ControladorClima(sensor, actuador, mode_manager)

        # Iniciar el ciclo principal
        while True:
            print("üõ† DEBUG: Entrando a controlador.leer_sensores()")
            datos = controlador.leer_sensores()
            print(f"üì° Lectura sensores: {datos}")
            print("‚úÖ L√≥gica aplicada seg√∫n el modo actual.")
            time.sleep(2)

    except KeyboardInterrupt:
        print("\nüõë Programa detenido por el usuario.")
    finally:
        print("‚ö° Liberando los pines GPIO...")
        GPIO.cleanup()


if __name__ == "__main__":
    main()
