"""
main.py
Programa principal que carga la configuraci√≥n y muestra informaci√≥n b√°sica
"""

from config_loader import ConfigLoader
import time

def mostrar_configuracion(config):
    print("\n==== CONFIGURACI√ìN DEL SISTEMA ====")
    # Mostrar Sensores
    print("üì° Sensores:")
    sensores = config.obtener("sensores", {})
    for nombre, datos in sensores.items():
        print(f"  - {nombre.capitalize()}: Pin={datos.get('pin')} Tipo={datos.get('tipo')}")

    # Mostrar Actuadores
    print("‚ö° Actuadores:")
    actuadores = config.obtener("actuadores", {})
    for nombre, datos in actuadores.items():
        if nombre == "rele_board":
            print(f"  - Placa de rel√©s: Pines={datos.get('pines')} modo={datos.get('modo')}")
        else:
            print(f"  - {nombre.capitalize()}")

    print("====================================\n")

def main():
    # Cargar configuraci√≥n
    config = ConfigLoader()
    try:
        config.cargar_configuracion()
    except Exception as e:
        print(f"‚ùå Error cargando configuraci√≥n: {e}")
        return

    # Mostrar la configuraci√≥n cargada
    mostrar_configuracion(config)

    # Ciclo principal (simulaci√≥n)
    print("üîÑ Iniciando ciclo principal...")
    try:
        while True:
            # Aqu√≠ en el futuro leeremos sensores y controlaremos actuadores
            print("üì° Leyendo sensores... (simulado)")
            print("‚ö° Gestionando actuadores... (simulado)")
            time.sleep(5)
    except KeyboardInterrupt:
        print("\nüõë Programa detenido por el usuario.")

if __name__ == "__main__":
    main()
